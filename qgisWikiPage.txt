This page contains details about Google Summer of Code 2011 project "QGIS mobile"

Here's the [http://www.google-melange.com/gsoc/project/google/gsoc2011/mbernasocchi/14005 project page] on GSoC 2011 site.

I created a public repository on GitHub [https://github.com/mbernasocchi/qgis-mobile].

==Goal==
The idea is to Port QGIS to Android and improve the GUI for using it on a Tablet PC. Qt, the base library of QGIS has already been ported to Android recently under the name Necessitas. A QT libs manager for android already exists as well under the name Ministro.
QGIS mobile should be finally packaged as an .apk pakage for easy distribution.

See also: 
*http://sourceforge.net/p/necessitas/home/
*http://labs.qt.nokia.com/2011/02/28/necessitas/
*http://blip.tv/bogdan-vatra/necessitas-qt-suite-for-android-platform-4819643

==Timeline==
===Until midterm===
The first part of the project would be dedicated to get all the other required libraries for building QGIS compiled for Android and to get a standard Qgis running under Android.
===After midterm===
The second part would then be dedicated to the UI improvement (based on a user case?) for using QGIS with a touchscreen interface, this would be a first version of QGIS Mobile.
====GPS integration====
Of utter importance is the integration of the mobile GPS device. This should be implemented using qgsGpsConnection, gpsNmeaConnection and qgsGpsDConnection

See also:
*http://www.qtcentre.org/threads/41698-QT-in-Android-Example-for-accessing-the-GPS-Service

===In case of extra time===
A third part, depending on the difficulty of the two first parts (or as part of a future project), would be to create a prototype for an optimized UI for smaller Android devices with basic functionality.

==Libraries Porting==
these libraries need to be ported to Android.

I wrote scripts that do all the work, they are located in the scripts folder of the [https://github.com/mbernasocchi/qgis-mobile/tree/master/scripts github repo]
===proj===
'''Done using version 4.7.0'''

===geos===
'''Done using version 3.2.2'''

See also:
*https://github.com/mrenouf/android-spatialite/issues/1

===sqlite===
'''Done  using version 3.7.4'''

See also:
*http://developer.android.com/reference/android/database/sqlite/SQLiteDatabase.html

===qwt===
'''Done using version 5.2.0 and necessitas'''

See also:
*http://groups.google.com/group/android-qt/browse_thread/thread/a27f11971192d82d?pli=1

===gdal===
'''Done using version 1.8.0'''

See also:
http://trac.osgeo.org/gdal/wiki/BuildingForAndroid

===expat===
'''Done using version 2.0.1'''

=Compile QGIS=
*http://www.srombauts.fr/2011/03/15/cmake-for-android/
*http://code.google.com/p/android-cmake/source/browse/toolchain/android.toolchain.cmake
*http://www.paraview.org/Wiki/CMake_Cross_Compiling#The_toolchain_file

=HOWTO=
here a step by step tutorial:
*Get Necessitas (http://sourceforge.net/projects/necessitas/files/)
*run Setup Script
*run Build Script

=GUI Adaptations=
==Needed toolbars==
*Navigation
*Layer load
*basic digitizing (add, move nodes)
*infotool
*attribute table
*measurements
*layer legend
*Layer properties add scrollbars

==GPS==
core/gps
app/gps 
qgsGpsConnection sub class with parseData() (like nmeaConnection)
QIODevice subclass listening to android gps api and emitting readyRead()
extend QgsGpsDetector

=Interesting link collection=
*[http://code.google.com/p/python-for-android/ Python for Android]
*http://thp.io/2011/pyside-android/
*http://android-tricks.blogspot.com/2009/02/hello-world-c-program-on-using-android.html
*http://comments.gmane.org/gmane.comp.handhelds.android.ndk/8732

